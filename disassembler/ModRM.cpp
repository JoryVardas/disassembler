#include "ModRM.h"

register_t modrmRegisterGroups[32][8]{
	{REGISTER_AL, REGISTER_AX, REGISTER_EAX, REGISTER_RAX, REGISTER_MM0, REGISTER_XMM0, REGISTER_YMM0, REGISTER_ZMM0},
	{REGISTER_CL, REGISTER_CX, REGISTER_ECX, REGISTER_RCX, REGISTER_MM1, REGISTER_XMM1, REGISTER_YMM1, REGISTER_ZMM1},
	{REGISTER_DL, REGISTER_DX, REGISTER_EDX, REGISTER_RDX, REGISTER_MM2, REGISTER_XMM2, REGISTER_YMM2, REGISTER_ZMM2},
	{REGISTER_BL, REGISTER_BX, REGISTER_EBX, REGISTER_RBX, REGISTER_MM3, REGISTER_XMM3, REGISTER_YMM3, REGISTER_ZMM3},
	{REGISTER_AH, REGISTER_SP, REGISTER_ESP, REGISTER_RSP, REGISTER_MM4, REGISTER_XMM4, REGISTER_YMM4, REGISTER_ZMM4},
	{REGISTER_CH, REGISTER_BP, REGISTER_EBP, REGISTER_RBP, REGISTER_MM5, REGISTER_XMM5, REGISTER_YMM5, REGISTER_ZMM5},
	{REGISTER_DH, REGISTER_SI, REGISTER_ESI, REGISTER_RSI, REGISTER_MM6, REGISTER_XMM6, REGISTER_YMM6, REGISTER_ZMM6},
	{REGISTER_BH, REGISTER_DI, REGISTER_EDI, REGISTER_RDI, REGISTER_MM7, REGISTER_XMM7, REGISTER_YMM7, REGISTER_ZMM7},
	{REGISTER_R8B, REGISTER_R8W, REGISTER_R8D, REGISTER_R8, REGISTER_INVALID_REGISTER, REGISTER_XMM8, REGISTER_YMM8, REGISTER_ZMM8},
	{REGISTER_R9B, REGISTER_R9W, REGISTER_R9D, REGISTER_R9, REGISTER_INVALID_REGISTER, REGISTER_XMM9, REGISTER_YMM9, REGISTER_ZMM9},
	{REGISTER_R10B, REGISTER_R10W, REGISTER_R10D, REGISTER_R10, REGISTER_INVALID_REGISTER, REGISTER_XMM10, REGISTER_YMM10, REGISTER_ZMM10},
	{REGISTER_R11B, REGISTER_R11W, REGISTER_R11D, REGISTER_R11, REGISTER_INVALID_REGISTER, REGISTER_XMM11, REGISTER_YMM11, REGISTER_ZMM11},
	{REGISTER_R12B, REGISTER_R12W, REGISTER_R12D, REGISTER_R12, REGISTER_INVALID_REGISTER, REGISTER_XMM12, REGISTER_YMM12, REGISTER_ZMM12},
	{REGISTER_R13B, REGISTER_R13W, REGISTER_R13D, REGISTER_R13, REGISTER_INVALID_REGISTER, REGISTER_XMM13, REGISTER_YMM13, REGISTER_ZMM13},
	{REGISTER_R14B, REGISTER_R14W, REGISTER_R14D, REGISTER_R14, REGISTER_INVALID_REGISTER, REGISTER_XMM14, REGISTER_YMM14, REGISTER_ZMM14},
	{REGISTER_R15B, REGISTER_R15W, REGISTER_R15D, REGISTER_R15, REGISTER_INVALID_REGISTER, REGISTER_XMM15, REGISTER_YMM15, REGISTER_ZMM15},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM16, REGISTER_YMM16, REGISTER_ZMM16},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM17, REGISTER_YMM17, REGISTER_ZMM17},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM18, REGISTER_YMM18, REGISTER_ZMM18},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM19, REGISTER_YMM19, REGISTER_ZMM19},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM20, REGISTER_YMM20, REGISTER_ZMM20},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM21, REGISTER_YMM21, REGISTER_ZMM21},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM22, REGISTER_YMM22, REGISTER_ZMM22},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM23, REGISTER_YMM23, REGISTER_ZMM23},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM24, REGISTER_YMM24, REGISTER_ZMM24},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM25, REGISTER_YMM25, REGISTER_ZMM25},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM26, REGISTER_YMM26, REGISTER_ZMM26},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM27, REGISTER_YMM27, REGISTER_ZMM27},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM28, REGISTER_YMM28, REGISTER_ZMM28},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM29, REGISTER_YMM29, REGISTER_ZMM29},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM30, REGISTER_YMM30, REGISTER_ZMM30},
	{REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_INVALID_REGISTER, REGISTER_XMM31, REGISTER_YMM31, REGISTER_ZMM31}
};

register_t modrmMemoryGroups[16][2] = {
	{REGISTER_EAX, REGISTER_RAX},
	{REGISTER_ECX, REGISTER_RCX},
	{REGISTER_EDX, REGISTER_RDX},
	{REGISTER_EBX, REGISTER_RBX},
	{REGISTER_ESP, REGISTER_RSP},
	{REGISTER_EBP, REGISTER_RBP},
	{REGISTER_ESI, REGISTER_RSI},
	{REGISTER_EDI, REGISTER_RDI},
	{REGISTER_R8D, REGISTER_R8},
	{REGISTER_R9D, REGISTER_R9},
	{REGISTER_R10D, REGISTER_R10},
	{REGISTER_R11D, REGISTER_R11},
	{REGISTER_R12D, REGISTER_R12},
	{REGISTER_R13D, REGISTER_R13},
	{REGISTER_R14D, REGISTER_R14},
	{REGISTER_R15D, REGISTER_R15}
};
register_t modrmSibBaseGroups[16][2] = {
	{REGISTER_EAX, REGISTER_RAX},
	{REGISTER_ECX, REGISTER_RCX},
	{REGISTER_EDX, REGISTER_RDX},
	{REGISTER_EBX, REGISTER_RBX},
	{REGISTER_ESP, REGISTER_RSP},
	{REGISTER_EBP, REGISTER_RBP},
	{REGISTER_ESI, REGISTER_RSI},
	{REGISTER_EDI, REGISTER_RDI},
	{REGISTER_R8D, REGISTER_R8},
	{REGISTER_R9D, REGISTER_R9},
	{REGISTER_R10D, REGISTER_R10},
	{REGISTER_R11D, REGISTER_R11},
	{REGISTER_R12D, REGISTER_R12},
	{REGISTER_R13D, REGISTER_R13},
	{REGISTER_R14D, REGISTER_R14},
	{REGISTER_R15D, REGISTER_R15}
};
register_t modrmSibScaledGroups[16][2] = {
	{REGISTER_EAX, REGISTER_RAX},
	{REGISTER_ECX, REGISTER_RCX},
	{REGISTER_EDX, REGISTER_RDX},
	{REGISTER_EBX, REGISTER_RBX},
	{REGISTER_ESP, REGISTER_RSP},
	{REGISTER_EBP, REGISTER_RBP},
	{REGISTER_ESI, REGISTER_RSI},
	{REGISTER_EDI, REGISTER_RDI},
	{REGISTER_R8D, REGISTER_R8},
	{REGISTER_R9D, REGISTER_R9},
	{REGISTER_R10D, REGISTER_R10},
	{REGISTER_R11D, REGISTER_R11},
	{REGISTER_R12D, REGISTER_R12},
	{REGISTER_R13D, REGISTER_R13},
	{REGISTER_R14D, REGISTER_R14},
	{REGISTER_R15D, REGISTER_R15}
};

ModRM::ModRM(byte b) {
	mod = (b & 0xc0) >> 6;
	reg = (b & 0x38) >> 3;
	rm = (b & 0x07);
};


SIB::SIB(byte b) {
	scale= (b & 0xc0) >> 6;
	index = (b & 0x38) >> 3;
	base = (b & 0x07);
};