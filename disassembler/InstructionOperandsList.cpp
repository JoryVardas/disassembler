#include "Instructions.h"

#define NO_OPERANDS {OPERAND_TYPE_NO_OPERANDS, OPERAND_TYPE_NO_OPERANDS, OPERAND_TYPE_NO_OPERANDS, OPERAND_TYPE_NO_OPERANDS}
#define _1_OPERANDS(op1) {op1, OPERAND_TYPE_NO_OPERANDS, OPERAND_TYPE_NO_OPERANDS, OPERAND_TYPE_NO_OPERANDS}
#define _2_OPERANDS(op1, op2) {op1, op2, OPERAND_TYPE_NO_OPERANDS, OPERAND_TYPE_NO_OPERANDS}
#define _3_OPERANDS(op1, op2, op3) {op1, op2, op3, OPERAND_TYPE_NO_OPERANDS}
#define _4_OPERANDS(op1, op2, op3, op4) {op1, op2, op3, op4}


InstructionOperand instructionOperands[] = {
//UNKNOWN INSTRUCTION
NO_OPERANDS,

//AAA
NO_OPERANDS,

//AAD
_1_OPERANDS(OPERAND_TYPE_IMM8),

//AAM
_1_OPERANDS(OPERAND_TYPE_IMM8),

//AAS
NO_OPERANDS,

//ADC
_2_OPERANDS(OPERAND_TYPE_IMPLICIT_AL, OPERAND_TYPE_IMM8),
_2_OPERANDS(OPERAND_TYPE_IMPLICIT_AX_EAX_RAX, OPERAND_TYPE_IMM16_32),
_2_OPERANDS(OPERAND_TYPE_RM8, OPERAND_TYPE_IMM8),
_2_OPERANDS(OPERAND_TYPE_RM16_32_64, OPERAND_TYPE_IMM16_32),
_2_OPERANDS(OPERAND_TYPE_RM16_32_64, OPERAND_TYPE_IMM8),
_2_OPERANDS(OPERAND_TYPE_RM8, OPERAND_TYPE_R8),
_2_OPERANDS(OPERAND_TYPE_RM16_32_64, OPERAND_TYPE_R16_32_64),
_2_OPERANDS(OPERAND_TYPE_R8, OPERAND_TYPE_RM8),
_2_OPERANDS(OPERAND_TYPE_R16_32_64, OPERAND_TYPE_RM16_32_64),

//ADCX
_2_OPERANDS(OPERAND_TYPE_R32_64, OPERAND_TYPE_RM32_64),

//ADD
_2_OPERANDS(OPERAND_TYPE_IMPLICIT_AL, OPERAND_TYPE_IMM8),
_2_OPERANDS(OPERAND_TYPE_IMPLICIT_AX_EAX_RAX, OPERAND_TYPE_IMPLICIT_AX_EAX_RAX),
_2_OPERANDS(OPERAND_TYPE_RM8, OPERAND_TYPE_IMM8),
_2_OPERANDS(OPERAND_TYPE_RM16_32_64, OPERAND_TYPE_IMM16_32),
_2_OPERANDS(OPERAND_TYPE_RM16_32_64, OPERAND_TYPE_IMM8),
_2_OPERANDS(OPERAND_TYPE_RM8, OPERAND_TYPE_R8),
_2_OPERANDS(OPERAND_TYPE_RM16_32_64, OPERAND_TYPE_R16_32_64),
_2_OPERANDS(OPERAND_TYPE_R8, OPERAND_TYPE_RM8),
_2_OPERANDS(OPERAND_TYPE_R16_32_64, OPERAND_TYPE_RM16_32_64),

//ADDPD
_2_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),
_3_OPERANDS(OPERAND_TYPE_XMM_YMM, OPERAND_TYPE_XMM_YMM, OPERAND_TYPE_XMM_YMM),
_3_OPERANDS(OPERAND_TYPE_XMM_YMM_ZMM_K_Z_, OPERAND_TYPE_XMM_YMM_ZMM, OPERAND_TYPE_XMM_YMM_ZMM_M128_256_512_M64BCST),

//ADDPS
_2_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),
_3_OPERANDS(OPERAND_TYPE_XMM_YMM, OPERAND_TYPE_XMM_YMM, OPERAND_TYPE_XMM_YMM_M128_256),
_3_OPERANDS(OPERAND_TYPE_XMM_YMM_ZMM_K_Z_, OPERAND_TYPE_XMM_YMM_ZMM, OPERAND_TYPE_XMM_YMM_ZMM_M128_256_512_M32bcst),

//ADDSD
_2_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M64),
_3_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M64),
_3_OPERANDS(OPERAND_TYPE_XMM_K_Z_, OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M64),

//ADDSS
_2_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M32),
_3_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M32),
_3_OPERANDS(OPERAND_TYPE_XMM_K_Z_, OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M32),

//ADDSUBPD
_2_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),
_3_OPERANDS(OPERAND_TYPE_XMM_YMM, OPERAND_TYPE_XMM_YMM, OPERAND_TYPE_XMM_YMM_M128_256),

//ADDSUBPS
_2_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),
_3_OPERANDS(OPERAND_TYPE_XMM_YMM, OPERAND_TYPE_XMM_YMM, OPERAND_TYPE_XMM_YMM_M128_256),

//ADOX
_2_OPERANDS(OPERAND_TYPE_R32_64, OPERAND_TYPE_RM32_64),

//AESDEC
_2_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),
_3_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),

//AESDECLAST
_2_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),
_3_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),

//AESENC
_2_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),
_3_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),

//AESENCLAST
_2_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),
_3_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),

//AESIMC
_2_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),
_2_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128),

//AESKEYGENASSIST
_3_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128, OPERAND_TYPE_IMM8),
_3_OPERANDS(OPERAND_TYPE_XMM, OPERAND_TYPE_XMM_M128, OPERAND_TYPE_IMM8),

//AND
_2_OPERANDS(OPERAND_TYPE_IMPLICIT_AL, OPERAND_TYPE_IMM8),
_2_OPERANDS(OPERAND_TYPE_IMPLICIT_AX_EAX_RAX, OPERAND_TYPE_IMM16_32),
_2_OPERANDS(OPERAND_TYPE_RM8, OPERAND_TYPE_IMM8),
_2_OPERANDS(OPERAND_TYPE_RM16_32_64, OPERAND_TYPE_IMM16_32),
_2_OPERANDS(OPERAND_TYPE_RM16_32_64, OPERAND_TYPE_IMM8),
_2_OPERANDS(OPERAND_TYPE_RM8, OPERAND_TYPE_R8),
_2_OPERANDS(OPERAND_TYPE_RM16_32_64, OPERAND_TYPE_R16_32_64),
_2_OPERANDS(OPERAND_TYPE_R8, OPERAND_TYPE_RM8),
_2_OPERANDS(OPERAND_TYPE_R16_32_64, OPERAND_TYPE_RM16_32_64),
};